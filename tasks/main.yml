---

- name: Kafka cluster | Initialize servers lists
  set_fact:
    zoo_servers: []
    kafka_zoo_servers: []

- name: Kafka cluster | Set required server lists
  set_fact:
    zoo_servers: "{{ zoo_servers + [ zoo_prefix + '-' + ( id | int + 1 ) | string  + ':' + zoo_ports.mgmt ] }}"
    kafka_zoo_servers: "{{ kafka_zoo_servers + [ zoo_prefix + '-' + ( id | int + 1 ) | string + ':' + zoo_ports.client | string ] }}"
  loop: "{{ groups['kafka'] }}"
  loop_control:
    index_var: id

- name: Update etc/hosts file with correct entrance
  blockinfile:
    path: /etc/hosts
    block: |
      {% set kafka_hosts_name = [ kafka_prefix + '-' + (id | int + 1 ) | string, zoo_prefix + '-' + (id | int + 1 ) | string ] %}
      {% for host in kafka_hosts_name %}
      {{ ansible_default_ipv4['address'] }} {{ host + '.' + host_domain + ' '+ host if host_domain is defined else host }}
      {% endfor %}
    marker: "# {mark} ANSIBLE MANAGED BLOCK {{ item }}"
  loop: "{{ groups['kafka'] }}"
  loop_control:
    index_var: id
  when: configure_etc_hosts

- name: Kafka cluster | Ensure group "zookeeper" exists
  group:
    name: kafka
    gid: 12345
    state: present

- name: Kafka cluster | Ensure group "zookeeper" exists
  user:
    name: kafka
    uid: 12345
    shell: /bin/nologin
    state: present

- name: Kafka cluster | Create persistence directory for kafka and zookeeper
  file:
    path: "{{ item }}"
    owner: kafka
    group: kafka
    state: directory
  when: kafka_persistence_enabled
  loop:
    - "{{ persistence_path }}/zk-data"
    - "{{ persistence_path }}/zk-txn-logs"
    - "{{ persistence_path }}/kafka-data"

- name: Kafka cluster | Prepare compose folder
  file:
    path: "{{ compose_files_path }}/{{ kafka_prefix }}"
    state: directory
    recurse: yes

- name: Kafka cluster | Copy Kafka compose
  template:
    src: kafka-compose.yml.j2
    dest: "{{ compose_files_path }}/{{ kafka_prefix }}/docker-compose.yml"

- name: Kafka cluster | Upload docker compose for kafka and zookeeper
  docker_service:
    project_name: "{{ kafka_prefix }}"
    project_src: "{{ compose_files_path }}/{{ kafka_prefix }}"

- name: Enable component monitoring
  block:
    - name: Kafka cluster | Create monitoring directory
      file:
        path: "{{ persistence_path }}/exporter"
        state: directory

    - name: Kafka cluster | Template configuration file for jmx-exporter config.yml
      template:
        src: config.yml.j2
        dest: "{{ persistence_path }}/exporter/config.yml"
        owner: nobody
        group: nobody
        mode: '0644'
      when: ansible_os_family == 'RedHat'

    - name: Kafka cluster | Template configuration file for jmx-exporter config.yml
      template:
        src: config.yml.j2
        dest: "{{ persistence_path }}/exporter/config.yml"
        owner: nobody
        group: nogroup
        mode: '0644'
      when: ansible_distribution == 'Ubuntu'

    - name: Kafka cluster | Prepare exporter compose folder
      file:
        path: "{{ compose_files_path }}/{{ kafka_prefix }}_exporter"
        state: directory
        recurse: yes

    - name: Kafka cluster | Copy Kafka exporter compose
      template:
        src: kafka-exporter-compose.yml.j2
        dest: "{{ compose_files_path }}/{{ kafka_prefix }}_exporter/docker-compose.yml"

    - name: Kafka cluster | Upload docker compose for monitoring
      docker_service:
        project_name: "{{ kafka_prefix }}_exporter"
        project_src: "{{ compose_files_path }}/{{ kafka_prefix }}_exporter"
  when: kafka_monitoring_enabled
